<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="NASDConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="NASDConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.NASDConnectionString.ConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TownTableAdapter" GeneratorDataComponentClassName="TownTableAdapter" Name="Town" UserDataComponentName="TownTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NASDConnectionString (Web.config)" DbObjectName="NASD.dbo.Town" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [dbo].[Town] WHERE (([TownID] = @Original_TownID) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [dbo].[Town] ([Name]) VALUES (@Name);
SELECT TownID, Name FROM Town WHERE (TownID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT TownID, Name FROM dbo.Town</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [dbo].[Town] SET [Name] = @Name WHERE (([TownID] = @Original_TownID) AND ([Name] = @Original_Name));
SELECT TownID, Name FROM Town WHERE (TownID = @TownID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="TownID" ColumnName="TownID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TownID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TownID" DataSetColumn="TownID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AddressTableAdapter" GeneratorDataComponentClassName="AddressTableAdapter" Name="Address" UserDataComponentName="AddressTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NASDConnectionString (Web.config)" DbObjectName="NASD.dbo.Address" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [dbo].[Address] WHERE (([AddressID] = @Original_AddressID) AND ([AddressText] = @Original_AddressText) AND ((@IsNull_TownID = 1 AND [TownID] IS NULL) OR ([TownID] = @Original_TownID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AddressID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AddressID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AddressText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AddressText" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [dbo].[Address] ([AddressText], [TownID]) VALUES (@AddressText, @TownID);
SELECT AddressID, AddressText, TownID FROM Address WHERE (AddressID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AddressText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AddressText" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT AddressID, AddressText, TownID FROM dbo.Address</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [dbo].[Address] SET [AddressText] = @AddressText, [TownID] = @TownID WHERE (([AddressID] = @Original_AddressID) AND ([AddressText] = @Original_AddressText) AND ((@IsNull_TownID = 1 AND [TownID] IS NULL) OR ([TownID] = @Original_TownID)));
SELECT AddressID, AddressText, TownID FROM Address WHERE (AddressID = @AddressID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AddressText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AddressText" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AddressID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AddressID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AddressText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AddressText" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TownID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="AddressID" ColumnName="AddressID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AddressID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AddressID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AddressID" DataSetColumn="AddressID" />
              <Mapping SourceColumn="AddressText" DataSetColumn="AddressText" />
              <Mapping SourceColumn="TownID" DataSetColumn="TownID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="NASDConnectionString (Web.config)" DbObjectName="NASD.dbo.Address" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT AddressID, AddressText, TownID FROM dbo.Address WHERE TownID = @TownID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="TownID" ColumnName="TownID" DataSourceName="NASD.dbo.Address" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TownID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TownID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DataSet1" msprop:Generator_DataSetName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Town" msprop:Generator_UserTableName="Town" msprop:Generator_RowDeletedName="TownRowDeleted" msprop:Generator_TableClassName="TownDataTable" msprop:Generator_RowChangedName="TownRowChanged" msprop:Generator_RowClassName="TownRow" msprop:Generator_RowChangingName="TownRowChanging" msprop:Generator_RowEvArgName="TownRowChangeEvent" msprop:Generator_RowEvHandlerName="TownRowChangeEventHandler" msprop:Generator_TablePropName="Town" msprop:Generator_TableVarName="tableTown" msprop:Generator_RowDeletingName="TownRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TownID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="TownID" msprop:Generator_ColumnPropNameInRow="TownID" msprop:Generator_ColumnVarNameInTable="columnTownID" msprop:Generator_ColumnPropNameInTable="TownIDColumn" type="xs:int" />
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInTable="NameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Address" msprop:Generator_UserTableName="Address" msprop:Generator_RowDeletedName="AddressRowDeleted" msprop:Generator_TableClassName="AddressDataTable" msprop:Generator_RowChangedName="AddressRowChanged" msprop:Generator_RowClassName="AddressRow" msprop:Generator_RowChangingName="AddressRowChanging" msprop:Generator_RowEvArgName="AddressRowChangeEvent" msprop:Generator_RowEvHandlerName="AddressRowChangeEventHandler" msprop:Generator_TablePropName="Address" msprop:Generator_TableVarName="tableAddress" msprop:Generator_RowDeletingName="AddressRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AddressID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="AddressID" msprop:Generator_ColumnPropNameInRow="AddressID" msprop:Generator_ColumnVarNameInTable="columnAddressID" msprop:Generator_ColumnPropNameInTable="AddressIDColumn" type="xs:int" />
              <xs:element name="AddressText" msprop:Generator_UserColumnName="AddressText" msprop:Generator_ColumnPropNameInRow="AddressText" msprop:Generator_ColumnVarNameInTable="columnAddressText" msprop:Generator_ColumnPropNameInTable="AddressTextColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TownID" msprop:Generator_UserColumnName="TownID" msprop:Generator_ColumnPropNameInRow="TownID" msprop:Generator_ColumnVarNameInTable="columnTownID" msprop:Generator_ColumnPropNameInTable="TownIDColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Town" />
      <xs:field xpath="mstns:TownID" />
    </xs:unique>
    <xs:unique name="Address_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Address" />
      <xs:field xpath="mstns:AddressID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Address_Town" msdata:parent="Town" msdata:child="Address" msdata:parentkey="TownID" msdata:childkey="TownID" msprop:Generator_UserRelationName="FK_Address_Town" msprop:Generator_RelationVarName="relationFK_Address_Town" msprop:Generator_UserChildTable="Address" msprop:Generator_UserParentTable="Town" msprop:Generator_ParentPropName="TownRow" msprop:Generator_ChildPropName="GetAddressRows" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>